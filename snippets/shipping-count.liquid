<br>
<div class="estimate-shipping">
  
<p>ðŸšš Deliver to <strong>United States</strong><br><small id="est-description"></small></p>
 
<div class="shipping-inline">
  <div class="shipping-block">
      <p class="shipping-title">ðŸš€  Express Shipping</p>
      <p class="shipping-delivery">Arrives by <span class="estimate-shipping-time express-ship">N/A</span><p>
  </div>
  <div class="shipping-block">
      <p class="shipping-title">ðŸ“¦  Standard Shipping</p>
      <p class="shipping-delivery">Arrives by <span class="estimate-shipping-time standard-ship">N/A</span><p>
  </div>
</div>
</div>
<script>
  
const SATURDAY = 6
const SUNDAY = 0
 document.addEventListener("DOMContentLoaded", function(){
    const store = "familypanda.co";
  let product_type = '{{ product.type }}';
  let product_tags = '{{ product.tags |where: "est-" | first }}';

  fetch('https://hub.greatestofalltime.co/api/est-delivery?store='+store+'&type='+product_type+'&tag='+product_tags)
  .then(response => response.json())
  .then(data => parseEstimateData(data));
});

{% comment %}
window.addEventListener('load', function () {
  const store = "familypanda.co";
  let product_type = '{{ product.type }}';
  let product_tags = '{{ product.tags |where: "est-" | first }}';

  fetch('https://hub.greatestofalltime.co/api/est-delivery?store='+store+'&type='+product_type+'&tag='+product_tags)
  .then(response => response.json())
  .then(data => parseEstimateData(data));

}, false);


{% endcomment %}
  
function parseEstimateData(data){
  
    document.getElementById('est-description').innerHTML = data.description;
  
	var standard_ship_min = parseInt(data.standard_ship_min);
  	var standard_ship_max = parseInt(data.standard_ship_max);
  	var express_ship_min = parseInt(data.express_ship_min);
  	var express_ship_max = parseInt(data.express_ship_max);
  
    if(standard_ship_min != 0 || standard_ship_max != 0){

      const [standardMinDate, standardMaxDate] = estimatedDeliveryRange(standard_ship_min,standard_ship_max);
      const [standardMinFormat, standardMaxFormat] = [formatDate(standardMinDate), formatDate(standardMaxDate)];
      let standardEstimatedDelivery
      if (standardMinFormat === standardMaxFormat) {
          standardEstimatedDelivery = standardMinFormat;
      } else {
          standardEstimatedDelivery = `${standardMinFormat} &mdash; ${standardMaxFormat}`;
      }
      document.querySelectorAll(".standard-ship").forEach((el) => {
          el.innerHTML = standardEstimatedDelivery;
      })
    }
    if(express_ship_min != 0 || express_ship_max != 0){
      
      const [expressMinDate, expressMaxDate] = estimatedDeliveryRange(express_ship_min,express_ship_max);
      const [expressMinFormat, expressMaxFormat] = [formatDate(expressMinDate), formatDate(expressMaxDate)];
      let expressEstimatedDelivery
      if (expressMinFormat === expressMaxFormat) {
          expressEstimatedDelivery = expressMinFormat;
      } else {
          expressEstimatedDelivery = `${expressMinFormat} &mdash; ${expressMaxFormat}`;
      }
      document.querySelectorAll(".express-ship").forEach((el2) => {
          el2.innerHTML = expressEstimatedDelivery;
      })
    }
}

function estimatedDeliveryRange(minWorkDays, maxWorkDays) {
   
  var from = new Date();
  const time = new Date(from.getTime())
    time.setHours(12, 0, 0, 0)
    let minDate
    let maxDate
    while (minWorkDays > 0 || maxWorkDays > 0) {
        time.setHours(time.getHours() + 24)
        if (time.getDay() !== SATURDAY && time.getDay() !== SUNDAY) {
            minWorkDays--
            maxWorkDays--
            if (minWorkDays <= 0 && !minDate) {
                minDate = new Date(time.getTime())
            }
            if (maxWorkDays <= 0 && !maxDate) {
                maxDate = new Date(time.getTime())
            }
        }
    }
    return [minDate, maxDate]
}

function formatDate(date = new Date()) {
    return new Intl.DateTimeFormat("en-US", {
        day: 'numeric',
        month: 'short',
    }).format(date);
}
</script>